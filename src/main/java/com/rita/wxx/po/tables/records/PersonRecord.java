/*
 * This file is generated by jOOQ.
 */
package com.rita.wxx.po.tables.records;


import com.rita.wxx.po.tables.Person;
import com.rita.wxx.po.tables.pojos.PersonPo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record6<Long, String, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>wxx.person.id</code>.
     */
    public PersonRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>wxx.person.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>wxx.person.name</code>.
     */
    public PersonRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>wxx.person.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>wxx.person.age</code>.
     */
    public PersonRecord setAge(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>wxx.person.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>wxx.person.sex</code>. 0: male 1 female
     */
    public PersonRecord setSex(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>wxx.person.sex</code>. 0: male 1 female
     */
    public Integer getSex() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>wxx.person.create_time</code>.
     */
    public PersonRecord setCreateTime(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>wxx.person.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>wxx.person.update_time</code>.
     */
    public PersonRecord setUpdateTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>wxx.person.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Person.PERSON.ID;
    }

    @Override
    public Field<String> field2() {
        return Person.PERSON.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Person.PERSON.AGE;
    }

    @Override
    public Field<Integer> field4() {
        return Person.PERSON.SEX;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Person.PERSON.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Person.PERSON.UPDATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getAge();
    }

    @Override
    public Integer component4() {
        return getSex();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getAge();
    }

    @Override
    public Integer value4() {
        return getSex();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdateTime();
    }

    @Override
    public PersonRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PersonRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PersonRecord value3(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public PersonRecord value4(Integer value) {
        setSex(value);
        return this;
    }

    @Override
    public PersonRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public PersonRecord value6(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public PersonRecord values(Long value1, String value2, Integer value3, Integer value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRecord
     */
    public PersonRecord() {
        super(Person.PERSON);
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(Long id, String name, Integer age, Integer sex, LocalDateTime createTime, LocalDateTime updateTime) {
        super(Person.PERSON);

        setId(id);
        setName(name);
        setAge(age);
        setSex(sex);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(PersonPo value) {
        super(Person.PERSON);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setAge(value.getAge());
            setSex(value.getSex());
            setCreateTime(value.getCreateTime());
            setUpdateTime(value.getUpdateTime());
            resetChangedOnNotNull();
        }
    }
}
